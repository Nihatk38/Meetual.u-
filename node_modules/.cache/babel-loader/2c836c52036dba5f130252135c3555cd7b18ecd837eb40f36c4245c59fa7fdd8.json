{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from \"vue\";\nimport router from \"@/router\";\nimport { useStore } from \"vuex\";\nimport * as Yup from \"yup\";\nimport { Form } from \"vee-validate\";\nimport AuthService from \"@/Services/Login/AuthService\";\nexport default {\n  name: \"LoginView\",\n  components: {\n    Form\n  },\n  setup() {\n    const store = useStore();\n    const isLoading = ref(false);\n    const userInfo = ref({});\n    const schema = Yup.object({\n      UserNo: Yup.number().nullable(true).required(\"Sicil No Boş Geçilemez\"),\n      Password: Yup.string().nullable(true).required(\"Şifre Boş Geçilemez\")\n    });\n    const onLogin = () => {\n      isLoading.value = true;\n      let loginInfo = {\n        UserNo: userInfo.value.UserNo.toString(),\n        Password: userInfo.value.Password,\n        GrantType: \"password\",\n        ClientId: process.env.VUE_APP_CLIENT_ID,\n        ModuleName: process.env.VUE_APP_MODULE_NAME,\n        RefreshToken: \"\"\n      };\n      return AuthService.getAuthLogin(loginInfo).then(payload => {\n        let menuInfo = [];\n        payload.Authorization.MenuInfo.forEach(menu => {\n          if (menu.Module === process.env.VUE_APP_MODULE_NAME) menuInfo.push(menu);\n        });\n        store.dispatch(\"Home/menuInfo\", menuInfo);\n        store.dispatch(\"Home/actionInfo\", payload.Authorization.ActionInfo);\n        AuthService.saveToken(payload);\n        return router.push(\"/\");\n      }).catch(() => {}).finally(() => {\n        isLoading.value = false;\n      });\n    };\n    return {\n      schema,\n      userInfo,\n      isLoading,\n      onLogin\n    };\n  }\n};","map":{"version":3,"names":["ref","router","useStore","Yup","Form","AuthService","name","components","setup","store","isLoading","userInfo","schema","object","UserNo","number","nullable","required","Password","string","onLogin","value","loginInfo","toString","GrantType","ClientId","process","env","VUE_APP_CLIENT_ID","ModuleName","VUE_APP_MODULE_NAME","RefreshToken","getAuthLogin","then","payload","menuInfo","Authorization","MenuInfo","forEach","menu","Module","push","dispatch","ActionInfo","saveToken","catch","finally"],"sources":["C:\\Users\\tkara.KARAHAN\\OneDrive\\Masaüstü\\Yeni klasör\\meetual.ui\\src\\components\\Login\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n    <div class=\"flex justify-content-center align-items-center h-full\"\r\n         style=\" min-height: 100vh\">\r\n\r\n        <div class=\"card flex flex-column align-items-center w-10 lg:w-4  sm:w-6 h-25rem\">\r\n            <img\r\n                alt=\"logo\"\r\n                class=\"h-10rem lg:w-13rem w-10rem -mt-8 mb-4\"\r\n                src=\"@/assets/images/logo.png\"\r\n                style=\"object-fit: contain; object-position: center\"\r\n            />\r\n            <Form :validation-schema=\"schema\" @submit=\"onLogin\">\r\n                <div class=\"grid\">\r\n                    <div class=\"col-12 \">\r\n                        <TkNumberInputField name=\"UserNo\" label=\"Sicil No\" v-model=\"userInfo.UserNo\" />\r\n                    </div>\r\n                    <div class=\"col-12\">\r\n                        <TkTextInputField name=\"Password\" label=\"Şifre\" v-model=\"userInfo.Password\" type=\"password\" />\r\n                    </div>\r\n                    <div class=\"col-12\">\r\n                        <PvButton class=\"lg:col-4 col-12 lg:col-offset-4 text-3xl button-color mt-3\" type=\"submit\"\r\n                                  label=\"Giriş Yap\"></PvButton>\r\n                    </div>\r\n\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import { ref } from \"vue\";\r\n    import router from \"@/router\";\r\n    import { useStore } from \"vuex\";\r\n    import * as Yup from \"yup\";\r\n    import { Form } from \"vee-validate\";\r\n\r\n    import AuthService from \"@/Services/Login/AuthService\";\r\n\r\n    export default {\r\n        name: \"LoginView\",\r\n        components: { Form },\r\n        setup() {\r\n            const store = useStore();\r\n            const isLoading = ref(false);\r\n            const userInfo = ref({});\r\n            const schema = Yup.object({\r\n                UserNo: Yup.number().nullable(true).required(\"Sicil No Boş Geçilemez\"),\r\n                Password: Yup.string().nullable(true).required(\"Şifre Boş Geçilemez\")\r\n            });\r\n\r\n            const onLogin = () => {\r\n                isLoading.value = true;\r\n                let loginInfo = {\r\n                    UserNo: userInfo.value.UserNo.toString(),\r\n                    Password: userInfo.value.Password,\r\n                    GrantType: \"password\",\r\n                    ClientId: process.env.VUE_APP_CLIENT_ID,\r\n                    ModuleName: process.env.VUE_APP_MODULE_NAME,\r\n                    RefreshToken: \"\"\r\n                };\r\n                return AuthService.getAuthLogin(loginInfo)\r\n                    .then((payload) => {\r\n                        let menuInfo = [];\r\n                        payload.Authorization.MenuInfo.forEach(menu => {\r\n                            if (menu.Module === process.env.VUE_APP_MODULE_NAME)\r\n                                menuInfo.push(menu);\r\n                        });\r\n                        store.dispatch(\"Home/menuInfo\", menuInfo);\r\n                        store.dispatch(\"Home/actionInfo\", payload.Authorization.ActionInfo);\r\n                        AuthService.saveToken(payload);\r\n                        return router.push(\"/\");\r\n                    }).catch(() => {\r\n                    }).finally(() => {\r\n                        isLoading.value = false;\r\n                    });\r\n            };\r\n\r\n            return {\r\n                schema,\r\n                userInfo,\r\n                isLoading,\r\n                onLogin\r\n            };\r\n        }\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n    .button-color {\r\n        background-color: #7c1049;\r\n    }\r\n\r\n    .button-color:hover {\r\n        background-color: #ad1164 !important;\r\n    }\r\n</style>\r\n"],"mappings":";AAgCI,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,MAAK,MAAO,UAAU;AAC7B,SAASC,QAAO,QAAS,MAAM;AAC/B,OAAO,KAAKC,GAAE,MAAO,KAAK;AAC1B,SAASC,IAAG,QAAS,cAAc;AAEnC,OAAOC,WAAU,MAAO,8BAA8B;AAEtD,eAAe;EACXC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IAAEH;EAAK,CAAC;EACpBI,KAAKA,CAAA,EAAG;IACJ,MAAMC,KAAI,GAAIP,QAAQ,CAAC,CAAC;IACxB,MAAMQ,SAAQ,GAAIV,GAAG,CAAC,KAAK,CAAC;IAC5B,MAAMW,QAAO,GAAIX,GAAG,CAAC,CAAC,CAAC,CAAC;IACxB,MAAMY,MAAK,GAAIT,GAAG,CAACU,MAAM,CAAC;MACtBC,MAAM,EAAEX,GAAG,CAACY,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAAC,CAACC,QAAQ,CAAC,wBAAwB,CAAC;MACtEC,QAAQ,EAAEf,GAAG,CAACgB,MAAM,CAAC,CAAC,CAACH,QAAQ,CAAC,IAAI,CAAC,CAACC,QAAQ,CAAC,qBAAqB;IACxE,CAAC,CAAC;IAEF,MAAMG,OAAM,GAAIA,CAAA,KAAM;MAClBV,SAAS,CAACW,KAAI,GAAI,IAAI;MACtB,IAAIC,SAAQ,GAAI;QACZR,MAAM,EAAEH,QAAQ,CAACU,KAAK,CAACP,MAAM,CAACS,QAAQ,CAAC,CAAC;QACxCL,QAAQ,EAAEP,QAAQ,CAACU,KAAK,CAACH,QAAQ;QACjCM,SAAS,EAAE,UAAU;QACrBC,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB;QACvCC,UAAU,EAAEH,OAAO,CAACC,GAAG,CAACG,mBAAmB;QAC3CC,YAAY,EAAE;MAClB,CAAC;MACD,OAAO1B,WAAW,CAAC2B,YAAY,CAACV,SAAS,EACpCW,IAAI,CAAEC,OAAO,IAAK;QACf,IAAIC,QAAO,GAAI,EAAE;QACjBD,OAAO,CAACE,aAAa,CAACC,QAAQ,CAACC,OAAO,CAACC,IAAG,IAAK;UAC3C,IAAIA,IAAI,CAACC,MAAK,KAAMd,OAAO,CAACC,GAAG,CAACG,mBAAmB,EAC/CK,QAAQ,CAACM,IAAI,CAACF,IAAI,CAAC;QAC3B,CAAC,CAAC;QACF9B,KAAK,CAACiC,QAAQ,CAAC,eAAe,EAAEP,QAAQ,CAAC;QACzC1B,KAAK,CAACiC,QAAQ,CAAC,iBAAiB,EAAER,OAAO,CAACE,aAAa,CAACO,UAAU,CAAC;QACnEtC,WAAW,CAACuC,SAAS,CAACV,OAAO,CAAC;QAC9B,OAAOjC,MAAM,CAACwC,IAAI,CAAC,GAAG,CAAC;MAC3B,CAAC,CAAC,CAACI,KAAK,CAAC,MAAM,CACf,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM;QACbpC,SAAS,CAACW,KAAI,GAAI,KAAK;MAC3B,CAAC,CAAC;IACV,CAAC;IAED,OAAO;MACHT,MAAM;MACND,QAAQ;MACRD,SAAS;MACTU;IACJ,CAAC;EACL;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}