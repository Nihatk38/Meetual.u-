{"ast":null,"code":"import { onMounted, ref } from \"vue\";\nimport EditBookingDialog from \"@/components/BookingHub/components/editBookingDialog.vue\";\nimport bookingData from \"@/auxiliary/userBookingInfos.json\";\nimport FullCalendar from \"@fullcalendar/vue3\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport trLocale from \"@fullcalendar/core/locales/tr\";\nexport default {\n  name: 'BookingHubList',\n  components: {\n    FullCalendar,\n    EditBookingDialog\n  },\n  setup() {\n    const consultationParticipantList = ref([]);\n    const selectedUser = ref();\n    const dialog = ref(false);\n    const menu = ref();\n    const calendarOptions = ref({\n      plugins: [dayGridPlugin],\n      initialView: 'dayGridMonth',\n      locale: trLocale,\n      events: []\n    });\n    const prepareTheData = () => {\n      const data = bookingData.calendarOptions.value.events.forEach(event => {\n        const start = new Date(event.start);\n        const end = new Date(event.end);\n        event.title = event.title + \"-> \" + start.toLocaleTimeString('tr-TR', {\n          hour: '2-digit',\n          minute: '2-digit'\n        }) + \"-\" + end.toLocaleTimeString('tr-TR', {\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n      });\n    };\n    const menuModel = ref([{\n      label: \"Randevu Oluştur\",\n      icon: \"pi pi-plus\",\n      command: () => {\n        openDialog();\n      }\n    }]);\n    const openDialog = () => {\n      dialog.value = true;\n    };\n    const closeDialog = () => {\n      dialog.value = false;\n    };\n    const onRowContextMenu = event => {\n      menu.value.show(event.originalEvent);\n    };\n    onMounted(async () => {\n      prepareTheData();\n      const status = sessionStorage.getItem('user.Status');\n      if (status == 2) {\n        consultationParticipantList.value = userData.users.filter(user => user.Status === 3);\n      } else if (status == 3) consultationParticipantList.value = userData.users.filter(user => user.Status === 2);\n    });\n    return {\n      consultationParticipantList,\n      selectedUser,\n      dialog,\n      menuModel,\n      menu,\n      openDialog,\n      closeDialog,\n      onRowContextMenu\n    };\n  }\n};","map":{"version":3,"names":["onMounted","ref","EditBookingDialog","bookingData","FullCalendar","dayGridPlugin","trLocale","name","components","setup","consultationParticipantList","selectedUser","dialog","menu","calendarOptions","plugins","initialView","locale","events","prepareTheData","data","value","forEach","event","start","Date","end","title","toLocaleTimeString","hour","minute","menuModel","label","icon","command","openDialog","closeDialog","onRowContextMenu","show","originalEvent","status","sessionStorage","getItem","userData","users","filter","user","Status"],"sources":["C:\\Users\\tkara.KARAHAN\\OneDrive\\Masaüstü\\Yeni klasör\\meetual.ui\\src\\components\\BookingHub\\views\\BookingHubList.vue"],"sourcesContent":["<template>\r\n  <div class=\"h-full \">\r\n    <FullCalendar :options=\"calendarOptions\"/>\r\n  </div>\r\n  <EditBookingDialog v-if=\"dialog\" :closeDialog=\"closeDialog\" :userId=\"selectedUser.Id\" />\r\n</template>\r\n\r\n<script>\r\nimport {onMounted, ref} from \"vue\";\r\n\r\nimport EditBookingDialog from \"@/components/BookingHub/components/editBookingDialog.vue\";\r\n\r\nimport bookingData from \"@/auxiliary/userBookingInfos.json\";\r\nimport FullCalendar from \"@fullcalendar/vue3\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport trLocale from \"@fullcalendar/core/locales/tr\";\r\n\r\nexport default {\r\n  name: 'BookingHubList',\r\n  components: {FullCalendar, EditBookingDialog},\r\n  setup() {\r\n    const consultationParticipantList = ref([]);\r\n    const selectedUser = ref()\r\n    const dialog = ref(false)\r\n    const menu = ref()\r\n    const calendarOptions = ref({\r\n      plugins: [dayGridPlugin],\r\n      initialView: 'dayGridMonth',\r\n      locale: trLocale,\r\n      events: [],\r\n    })\r\n    const prepareTheData = () => {\r\n      const data = bookingData.\r\n      calendarOptions.value.events.forEach(event => {\r\n        const start = new Date(event.start);\r\n        const end = new Date(event.end);\r\n        event.title = event.title + \"-> \" + start.toLocaleTimeString('tr-TR', {\r\n          hour: '2-digit',\r\n          minute: '2-digit'\r\n        })+\"-\"+end.toLocaleTimeString('tr-TR', {\r\n          hour: '2-digit',\r\n          minute: '2-digit'\r\n        })\r\n      })\r\n    }\r\n\r\n    const menuModel = ref([\r\n      {\r\n        label: \"Randevu Oluştur\",\r\n        icon: \"pi pi-plus\",\r\n        command: () => {\r\n          openDialog()\r\n        }\r\n      },\r\n    ])\r\n\r\n    const openDialog = () => {\r\n      dialog.value = true;\r\n    }\r\n\r\n    const closeDialog = () => {\r\n      dialog.value = false;\r\n    }\r\n\r\n    const onRowContextMenu = (event) => {\r\n      menu.value.show(event.originalEvent);\r\n    };\r\n\r\n    onMounted(async () => {\r\n      prepareTheData()\r\n      const status = sessionStorage.getItem('user.Status');\r\n      if (status == 2) {\r\n        consultationParticipantList.value = userData.users.filter(user => user.Status === 3)\r\n      } else if (status == 3)\r\n        consultationParticipantList.value = userData.users.filter(user => user.Status === 2)\r\n    })\r\n    return {\r\n      consultationParticipantList, selectedUser, dialog, menuModel, menu,\r\n      openDialog, closeDialog, onRowContextMenu\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":"AAQA,SAAQA,SAAS,EAAEC,GAAG,QAAO,KAAK;AAElC,OAAOC,iBAAgB,MAAO,0DAA0D;AAExF,OAAOC,WAAU,MAAO,mCAAmC;AAC3D,OAAOC,YAAW,MAAO,oBAAoB;AAC7C,OAAOC,aAAY,MAAO,uBAAuB;AACjD,OAAOC,QAAO,MAAO,+BAA+B;AAEpD,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE;IAACJ,YAAY;IAAEF;EAAiB,CAAC;EAC7CO,KAAKA,CAAA,EAAG;IACN,MAAMC,2BAA0B,GAAIT,GAAG,CAAC,EAAE,CAAC;IAC3C,MAAMU,YAAW,GAAIV,GAAG,CAAC;IACzB,MAAMW,MAAK,GAAIX,GAAG,CAAC,KAAK;IACxB,MAAMY,IAAG,GAAIZ,GAAG,CAAC;IACjB,MAAMa,eAAc,GAAIb,GAAG,CAAC;MAC1Bc,OAAO,EAAE,CAACV,aAAa,CAAC;MACxBW,WAAW,EAAE,cAAc;MAC3BC,MAAM,EAAEX,QAAQ;MAChBY,MAAM,EAAE;IACV,CAAC;IACD,MAAMC,cAAa,GAAIA,CAAA,KAAM;MAC3B,MAAMC,IAAG,GAAIjB,WAAW,CACxBW,eAAe,CAACO,KAAK,CAACH,MAAM,CAACI,OAAO,CAACC,KAAI,IAAK;QAC5C,MAAMC,KAAI,GAAI,IAAIC,IAAI,CAACF,KAAK,CAACC,KAAK,CAAC;QACnC,MAAME,GAAE,GAAI,IAAID,IAAI,CAACF,KAAK,CAACG,GAAG,CAAC;QAC/BH,KAAK,CAACI,KAAI,GAAIJ,KAAK,CAACI,KAAI,GAAI,KAAI,GAAIH,KAAK,CAACI,kBAAkB,CAAC,OAAO,EAAE;UACpEC,IAAI,EAAE,SAAS;UACfC,MAAM,EAAE;QACV,CAAC,CAAC,GAAC,GAAG,GAACJ,GAAG,CAACE,kBAAkB,CAAC,OAAO,EAAE;UACrCC,IAAI,EAAE,SAAS;UACfC,MAAM,EAAE;QACV,CAAC;MACH,CAAC;IACH;IAEA,MAAMC,SAAQ,GAAI9B,GAAG,CAAC,CACpB;MACE+B,KAAK,EAAE,iBAAiB;MACxBC,IAAI,EAAE,YAAY;MAClBC,OAAO,EAAEA,CAAA,KAAM;QACbC,UAAU,CAAC;MACb;IACF,CAAC,CACF;IAED,MAAMA,UAAS,GAAIA,CAAA,KAAM;MACvBvB,MAAM,CAACS,KAAI,GAAI,IAAI;IACrB;IAEA,MAAMe,WAAU,GAAIA,CAAA,KAAM;MACxBxB,MAAM,CAACS,KAAI,GAAI,KAAK;IACtB;IAEA,MAAMgB,gBAAe,GAAKd,KAAK,IAAK;MAClCV,IAAI,CAACQ,KAAK,CAACiB,IAAI,CAACf,KAAK,CAACgB,aAAa,CAAC;IACtC,CAAC;IAEDvC,SAAS,CAAC,YAAY;MACpBmB,cAAc,CAAC;MACf,MAAMqB,MAAK,GAAIC,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC;MACpD,IAAIF,MAAK,IAAK,CAAC,EAAE;QACf9B,2BAA2B,CAACW,KAAI,GAAIsB,QAAQ,CAACC,KAAK,CAACC,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,MAAK,KAAM,CAAC;MACrF,OAAO,IAAIP,MAAK,IAAK,CAAC,EACpB9B,2BAA2B,CAACW,KAAI,GAAIsB,QAAQ,CAACC,KAAK,CAACC,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,MAAK,KAAM,CAAC;IACvF,CAAC;IACD,OAAO;MACLrC,2BAA2B;MAAEC,YAAY;MAAEC,MAAM;MAAEmB,SAAS;MAAElB,IAAI;MAClEsB,UAAU;MAAEC,WAAW;MAAEC;IAC3B;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}