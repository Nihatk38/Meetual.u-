{"ast":null,"code":"import { ref, watch } from \"vue\";\nimport dayjs from \"dayjs\";\nexport default {\n  props: {\n    name: {\n      type: String,\n      required: true\n    },\n    label: {\n      type: String\n    },\n    dateFormat: {\n      type: String,\n      default: \"dd.mm.yy\"\n    },\n    disabled: {\n      default: false\n    },\n    modelValue: {\n      type: [Date, String],\n      default: null\n    }\n  },\n  emits: [\"update:modelValue\", \"date-select\"],\n  setup(props, {\n    emit\n  }) {\n    const inputValue = ref(props.modelValue);\n    const updateValue = e => {\n      emit(\"date-select\", e);\n    };\n    const controlDate = date => {\n      let newDate;\n      if (dayjs(date).isValid()) newDate = dayjs(date).toDate();else if (dayjs(date, \"DD.MM.YYYY\").isValid()) newDate = dayjs(date, \"DD.MM.YYYY\").toDate();else if (dayjs(date, \"YYYY-MM-DD\").isValid()) newDate = dayjs(date, \"YYYY-MM-DD\").toDate();else if (dayjs(date, \"YYYY-MM-DDTHH:mm:ss\").isValid()) newDate = dayjs(date, \"YYYY-MM-DDTHH:mm:ss\").toDate();else newDate = null;\n      return newDate;\n    };\n    watch(inputValue, val => {\n      if (!val) return;\n      const newDate = controlDate(val);\n      if (!newDate) return;\n      if (!props.disabled) emit(\"update:modelValue\", newDate.toISOString());\n      try {\n        const newDate = dayjs(val).toDate();\n        if (!newDate) return;\n        emit(\"update:modelValue\", newDate);\n      } catch (e) {\n        console.log(e);\n      }\n    });\n    watch(() => props.modelValue, val => {\n      if (!val) return;\n      const newDate = controlDate(val);\n      const oldDate = controlDate(inputValue.value);\n      if (!newDate) return;\n      const date = dayjs(newDate);\n      if (oldDate) {\n        if (!date.isSame(oldDate)) inputValue.value = date.toDate();\n      } else inputValue.value = date.toDate();\n    });\n    return {\n      inputValue,\n      updateValue\n    };\n  }\n};","map":{"version":3,"names":["ref","watch","dayjs","props","name","type","String","required","label","dateFormat","default","disabled","modelValue","Date","emits","setup","emit","inputValue","updateValue","e","controlDate","date","newDate","isValid","toDate","val","toISOString","console","log","oldDate","value","isSame"],"sources":["C:\\Users\\tkara.KARAHAN\\OneDrive\\Masaüstü\\Yeni klasör\\meetual.ui\\src\\auxiliary\\BaseInputs\\NkCalendar.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"mb-1\">{{ label }}</div>\r\n        <PvCalendar\r\n            class=\"w-full\"\r\n            v-model=\"inputValue\"\r\n            :dateFormat=\"dateFormat\"\r\n            :manualInput=\"true\"\r\n            :name=\"name\"\r\n            :showIcon=\"true\"\r\n            :disabled=\"disabled\"\r\n            hourFormat=\"24\"\r\n            :baseZIndex=\"3201\"\r\n            @date-select=\"updateValue($event)\"\r\n        />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import { ref, watch } from \"vue\";\r\n    import dayjs from \"dayjs\";\r\n\r\n    export default {\r\n        props: {\r\n            name: {\r\n                type: String,\r\n                required: true\r\n            },\r\n            label: {\r\n                type: String\r\n            },\r\n            dateFormat: {\r\n                type: String,\r\n                default: \"dd.mm.yy\"\r\n            },\r\n            disabled: {\r\n                default: false\r\n            },\r\n            modelValue: {\r\n                type: [Date, String],\r\n                default: null\r\n            }\r\n        },\r\n        emits: [\"update:modelValue\", \"date-select\"],\r\n        setup(props, { emit }) {\r\n\r\n            const inputValue = ref(props.modelValue);\r\n            const updateValue = (e) => {\r\n                emit(\"date-select\", e);\r\n            };\r\n\r\n            const controlDate = (date) => {\r\n                let newDate;\r\n                if (dayjs(date).isValid())\r\n                    newDate = dayjs(date).toDate();\r\n                else if (dayjs(date, \"DD.MM.YYYY\").isValid())\r\n                    newDate = dayjs(date, \"DD.MM.YYYY\").toDate();\r\n                else if (dayjs(date, \"YYYY-MM-DD\").isValid())\r\n                    newDate = dayjs(date, \"YYYY-MM-DD\").toDate();\r\n                else if (dayjs(date, \"YYYY-MM-DDTHH:mm:ss\").isValid())\r\n                    newDate = dayjs(date, \"YYYY-MM-DDTHH:mm:ss\").toDate();\r\n                else\r\n                    newDate = null;\r\n\r\n                return newDate;\r\n            };\r\n\r\n            watch(inputValue, (val) => {\r\n                if (!val)\r\n                    return;\r\n\r\n                const newDate = controlDate(val);\r\n                if (!newDate) return;\r\n                if (!props.disabled)\r\n                    emit(\"update:modelValue\", newDate.toISOString());\r\n\r\n                try {\r\n                    const newDate = dayjs(val).toDate();\r\n                    if (!newDate) return;\r\n                    emit(\"update:modelValue\", newDate);\r\n                } catch (e) {\r\n                    console.log(e);\r\n                }\r\n            });\r\n\r\n            watch(() => props.modelValue, (val) => {\r\n                if (!val)\r\n                    return;\r\n\r\n                const newDate = controlDate(val);\r\n\r\n                const oldDate = controlDate(inputValue.value);\r\n                if (!newDate) return;\r\n                const date = dayjs(newDate);\r\n\r\n                if (oldDate) {\r\n                    if (!date.isSame(oldDate))\r\n                        inputValue.value = date.toDate();\r\n                } else\r\n                    inputValue.value = date.toDate();\r\n            });\r\n            return {\r\n                inputValue, updateValue\r\n            };\r\n        }\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}