{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-270a7331\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"calendar-wrapper\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_FullCalendar = _resolveComponent(\"FullCalendar\");\n  const _component_NkDialog = _resolveComponent(\"NkDialog\");\n  return _openBlock(), _createBlock(_component_NkDialog, {\n    closeDialog: $props.closeDialog,\n    header: \"Rezervasyon Düzenleme\"\n  }, {\n    contents: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_FullCalendar, {\n      options: $setup.calendarOptions\n    }, null, 8 /* PROPS */, [\"options\"])])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"closeDialog\"]);\n}","map":{"version":3,"names":["class","_createBlock","_component_NkDialog","closeDialog","$props","header","contents","_withCtx","_createElementVNode","_hoisted_1","_createVNode","_component_FullCalendar","options","$setup","calendarOptions"],"sources":["C:\\Users\\tkara.KARAHAN\\OneDrive\\Masaüstü\\Yeni klasör\\meetual.ui\\src\\components\\BookingHub\\components\\editBookingDialog.vue"],"sourcesContent":["<template>\r\n  <NkDialog :closeDialog=\"closeDialog\" header=\"Rezervasyon Düzenleme\">\r\n    <template #contents>\r\n      <div class=\"calendar-wrapper\">\r\n        <FullCalendar :options=\"calendarOptions\"/>\r\n      </div>\r\n\r\n    </template>\r\n  </NkDialog>\r\n</template>\r\n\r\n<script>\r\nimport {onMounted, ref} from \"vue\";\r\n\r\nimport FullCalendar from '@fullcalendar/vue3';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport trLocale from '@fullcalendar/core/locales/tr';\r\n\r\nexport default {\r\n  name: 'editBookingDialog',\r\n  components: {FullCalendar},\r\n  props: {\r\n    userId: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    closeDialog: {\r\n      type: Function,\r\n      required: true,\r\n    },\r\n  },\r\n  setup() {\r\n\r\n    const calendarOptions = ref({\r\n      plugins: [dayGridPlugin],\r\n      initialView: 'dayGridMonth',\r\n      selectable: true,\r\n      timeFormat: 'H:mm',\r\n      locale: trLocale,\r\n      titleFormat: { // will produce something like \"Tuesday, September 18, 2018\"\r\n        hour: 'numeric',\r\n\r\n      },\r\n      events: [\r\n        {\r\n          title: 'Danışan1',\r\n          start: '2023-11-01T09:00:00',\r\n          end: '2023-11-01T11:30:00'\r\n        },\r\n        {\r\n          title: 'Danışan 2',\r\n          start: '2023-11-01T12:00:00',\r\n          end: '2023-11-01T13:00:00'\r\n        },\r\n        {\r\n          title: 'Danışan 3',\r\n          start: '2023-11-01T12:00:00',\r\n          end: '2023-11-01T13:00:00'\r\n        },\r\n        // Diğer etkinlikler burada tanımlanabilir\r\n      ],\r\n    })\r\n    const editTitle = () => {\r\n      calendarOptions.value.events.forEach(event => {\r\n        const start = new Date(event.start);\r\n        const end = new Date(event.end);\r\n        event.title = event.title + \"-> \" + start.toLocaleTimeString('tr-TR', {\r\n          hour: '2-digit',\r\n          minute: '2-digit'\r\n        })+\"-\"+end.toLocaleTimeString('tr-TR', {\r\n          hour: '2-digit',\r\n          minute: '2-digit'\r\n        })\r\n      })\r\n    }\r\n    onMounted(()=>{\r\n      editTitle()\r\n    })\r\n\r\n    return {\r\n      calendarOptions\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.calendar-wrapper {\r\n  width: 100%;\r\n  height: 62% !important;\r\n  overflow: auto;\r\n}\r\n</style>"],"mappings":";;;EAGWA,KAAK,EAAC;AAAkB;;;;uBAFjCC,YAAA,CAOWC,mBAAA;IAPAC,WAAW,EAAEC,MAAA,CAAAD,WAAW;IAAEE,MAAM,EAAC;;IAC/BC,QAAQ,EAAAC,QAAA,CACjB,MAEM,CAFNC,mBAAA,CAEM,OAFNC,UAEM,GADJC,YAAA,CAA0CC,uBAAA;MAA3BC,OAAO,EAAEC,MAAA,CAAAC;IAAe,qC"},"metadata":{},"sourceType":"module","externalDependencies":[]}