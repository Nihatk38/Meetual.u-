{"ast":null,"code":"import { resolveComponent as _resolveComponent, mergeProps as _mergeProps, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"p-float-label\"\n};\nconst _hoisted_2 = [\"for\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PvInputText = _resolveComponent(\"PvInputText\");\n  return _openBlock(), _createElementBlock(\"span\", _hoisted_1, [_createVNode(_component_PvInputText, _mergeProps({\n    modelValue: $setup.inputValue,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.inputValue = $event),\n    name: $props.name,\n    placeholder: $props.placeholder,\n    type: $props.type,\n    value: $setup.inputValue,\n    autocomplete: \"off\",\n    class: \"w-full\"\n  }, _ctx.$attrs), null, 16 /* FULL_PROPS */, [\"modelValue\", \"name\", \"placeholder\", \"type\", \"value\"]), _createElementVNode(\"label\", {\n    for: $props.name,\n    class: \"tk-label\"\n  }, _toDisplayString($props.label), 9 /* TEXT, PROPS */, _hoisted_2)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_PvInputText","_mergeProps","$setup","inputValue","$event","name","$props","placeholder","type","value","autocomplete","_ctx","$attrs","_createElementVNode","for","label","_hoisted_2"],"sources":["C:\\Users\\tkara.KARAHAN\\OneDrive\\Masaüstü\\Meetual\\meetual.ui\\src\\auxiliary\\BaseInputs\\NkTextInput.vue"],"sourcesContent":["<template>\r\n  <span class=\"p-float-label\">\r\n    <PvInputText\r\n        v-model=\"inputValue\"\r\n        :name=\"name\"\r\n        :placeholder=\"placeholder\"\r\n        :type=\"type\"\r\n        :value=\"inputValue\"\r\n        autocomplete=\"off\"\r\n        class=\"w-full\"\r\n        v-bind=\"$attrs\"\r\n\r\n    />\r\n    <label :for=\"name\" class=\"tk-label\">{{ label }}</label>\r\n  </span>\r\n</template>\r\n\r\n<script>\r\nimport {ref, watch} from \"vue\";\r\n\r\nexport default {\r\n  props: {\r\n    type: {\r\n      type: String,\r\n      default: \"text\",\r\n    },\r\n    modelValue: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    name: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    label: {\r\n      type: String,\r\n    },\r\n    placeholder: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n  },\r\n  emits: ['update:modelValue'],\r\n  setup(props, {emit}) {\r\n    const inputValue = ref(props.modelValue);\r\n\r\n    watch(inputValue, (val) => {\r\n      emit('update:modelValue', val);\r\n    });\r\n\r\n    watch(() => props.modelValue, (val) => {\r\n      if (val !== inputValue.value) {\r\n        inputValue.value = val;\r\n      }\r\n    })\r\n    return {\r\n      inputValue,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":";;EACQA,KAAK,EAAC;AAAe;;;;uBAA3BC,mBAAA,CAaO,QAbPC,UAaO,GAZLC,YAAA,CAUEC,sBAAA,EAVFC,WAAA,CAUE;gBATWC,MAAA,CAAAC,UAAU;+DAAVD,MAAA,CAAAC,UAAU,GAAAC,MAAA;IAClBC,IAAI,EAAEC,MAAA,CAAAD,IAAI;IACVE,WAAW,EAAED,MAAA,CAAAC,WAAW;IACxBC,IAAI,EAAEF,MAAA,CAAAE,IAAI;IACVC,KAAK,EAAEP,MAAA,CAAAC,UAAU;IAClBO,YAAY,EAAC,KAAK;IAClBd,KAAK,EAAC;KACEe,IAAA,CAAAC,MAAM,uFAGlBC,mBAAA,CAAuD;IAA/CC,GAAG,EAAER,MAAA,CAAAD,IAAI;IAAET,KAAK,EAAC;sBAAcU,MAAA,CAAAS,KAAK,wBAAAC,UAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}