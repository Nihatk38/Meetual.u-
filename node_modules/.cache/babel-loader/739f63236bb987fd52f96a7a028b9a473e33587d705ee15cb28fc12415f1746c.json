{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { onMounted, ref } from \"vue\";\nimport bookingData from \"@/auxiliary/userBookingInfos.json\";\nimport { useToast } from \"primevue/usetoast\";\nimport { useConfirm } from \"primevue/useconfirm\";\nexport default {\n  name: \"WaitingConfirmList\",\n  setup() {\n    const toast = useToast();\n    const confirm = useConfirm();\n    const bookingList = ref([]);\n    const selectedBooking = ref({});\n    const menu = ref();\n    const menuModel = ref([{\n      label: \"Onayla\",\n      icon: \"pi pi-check\",\n      command: () => {\n        confirmBooking();\n      }\n    }]);\n    const confirmBooking = () => {\n      console.log(selectedBooking.value);\n      confirm.require({\n        message: \"Randevu onaylamak istediğinizden emin misiniz?\",\n        header: \"Onay\",\n        accept: () => {\n          bookingList.value.splice(this.Payload.indexOf(this.selected), 1);\n          toast.add({\n            severity: 'success',\n            summary: 'Başarılı',\n            detail: 'Randevu oluşturuldu',\n            life: 3000\n          });\n        }\n      });\n    };\n    onMounted(() => {\n      const data = bookingData.bookingList;\n      console.log(\"data\", data);\n      data.forEach(booking => {\n        if (booking.IsConfirm === false) bookingList.value.push({\n          ...booking\n        });\n      });\n    });\n    const onRowContextMenu = event => {\n      menu.value.show(event.originalEvent);\n    };\n    return {\n      bookingList,\n      selectedBooking,\n      menu,\n      menuModel,\n      onRowContextMenu\n    };\n  }\n};","map":{"version":3,"names":["onMounted","ref","bookingData","useToast","useConfirm","name","setup","toast","confirm","bookingList","selectedBooking","menu","menuModel","label","icon","command","confirmBooking","console","log","value","require","message","header","accept","splice","Payload","indexOf","selected","add","severity","summary","detail","life","data","forEach","booking","IsConfirm","push","onRowContextMenu","event","show","originalEvent"],"sources":["C:\\Users\\tkara.KARAHAN\\OneDrive\\Masaüstü\\Yeni klasör\\meetual.ui\\src\\components\\BookingConfirmation\\views\\WaitingConfirmList.vue"],"sourcesContent":["<template>\r\n  <div class=\"h-full \">\r\n    <PvDataTable\r\n        :value=\"bookingList\" selectionMode=\"single\" v-model:selection=\"selectedBooking\"\r\n        v-model:contextMenuSelection=\"selectedBooking\" @rowContextmenu=\"onRowContextMenu\" dataKey=\"Id\"\r\n        responsiveLayout=\"scroll\" :scrollable=\"true\" scrollHeight=\"100%\"\r\n        showGridlines>\r\n      <PvColumn field=\"AdvisorName\" header=\"Danışman Ad\" sortable/>\r\n      <PvColumn field=\"ClientName\" header=\"Danışan Ad\" sortable/>\r\n      <PvColumn field=\"start\" header=\"Başlangıç\" sortable/>\r\n      <PvColumn field=\"end\" header=\"Bitiş\" sortable/>\r\n\r\n      <PvContextMenu :model=\"menuModel\" ref=\"menu\"/>\r\n    </PvDataTable>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {onMounted, ref} from \"vue\";\r\n\r\nimport bookingData from \"@/auxiliary/userBookingInfos.json\";\r\nimport {useToast} from \"primevue/usetoast\";\r\nimport {useConfirm} from \"primevue/useconfirm\";\r\n\r\nexport default {\r\n  name: \"WaitingConfirmList\",\r\n  setup() {\r\n    const toast = useToast();\r\n    const confirm = useConfirm();\r\n    const bookingList = ref([]);\r\n    const selectedBooking = ref({});\r\n    const menu = ref();\r\n\r\n    const menuModel = ref([\r\n      {\r\n        label: \"Onayla\",\r\n        icon: \"pi pi-check\",\r\n        command: () => {\r\n          confirmBooking()\r\n        }\r\n      },\r\n    ])\r\n\r\n    const confirmBooking = () => {\r\n      console.log(selectedBooking.value)\r\n      confirm.require({\r\n        message: \"Randevu onaylamak istediğinizden emin misiniz?\",\r\n        header: \"Onay\",\r\n        accept: () => {\r\n          bookingList.value.splice(this.Payload.indexOf(this.selected), 1);\r\n          toast.add({severity: 'success', summary: 'Başarılı', detail: 'Randevu oluşturuldu', life: 3000});\r\n        }\r\n      })\r\n    }\r\n\r\n    onMounted(() => {\r\n      const data = bookingData.bookingList;\r\n      console.log(\"data\", data)\r\n      data.forEach(booking => {\r\n        if (booking.IsConfirm === false)\r\n          bookingList.value.push({...booking})\r\n      })\r\n    })\r\n    const onRowContextMenu = (event) => {\r\n      menu.value.show(event.originalEvent);\r\n    };\r\n    return {\r\n      bookingList, selectedBooking, menu, menuModel,\r\n      onRowContextMenu,\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":";AAkBA,SAAQA,SAAS,EAAEC,GAAG,QAAO,KAAK;AAElC,OAAOC,WAAU,MAAO,mCAAmC;AAC3D,SAAQC,QAAQ,QAAO,mBAAmB;AAC1C,SAAQC,UAAU,QAAO,qBAAqB;AAE9C,eAAe;EACbC,IAAI,EAAE,oBAAoB;EAC1BC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIJ,QAAQ,CAAC,CAAC;IACxB,MAAMK,OAAM,GAAIJ,UAAU,CAAC,CAAC;IAC5B,MAAMK,WAAU,GAAIR,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAMS,eAAc,GAAIT,GAAG,CAAC,CAAC,CAAC,CAAC;IAC/B,MAAMU,IAAG,GAAIV,GAAG,CAAC,CAAC;IAElB,MAAMW,SAAQ,GAAIX,GAAG,CAAC,CACpB;MACEY,KAAK,EAAE,QAAQ;MACfC,IAAI,EAAE,aAAa;MACnBC,OAAO,EAAEA,CAAA,KAAM;QACbC,cAAc,CAAC;MACjB;IACF,CAAC,CACF;IAED,MAAMA,cAAa,GAAIA,CAAA,KAAM;MAC3BC,OAAO,CAACC,GAAG,CAACR,eAAe,CAACS,KAAK;MACjCX,OAAO,CAACY,OAAO,CAAC;QACdC,OAAO,EAAE,gDAAgD;QACzDC,MAAM,EAAE,MAAM;QACdC,MAAM,EAAEA,CAAA,KAAM;UACZd,WAAW,CAACU,KAAK,CAACK,MAAM,CAAC,IAAI,CAACC,OAAO,CAACC,OAAO,CAAC,IAAI,CAACC,QAAQ,CAAC,EAAE,CAAC,CAAC;UAChEpB,KAAK,CAACqB,GAAG,CAAC;YAACC,QAAQ,EAAE,SAAS;YAAEC,OAAO,EAAE,UAAU;YAAEC,MAAM,EAAE,qBAAqB;YAAEC,IAAI,EAAE;UAAI,CAAC,CAAC;QAClG;MACF,CAAC;IACH;IAEAhC,SAAS,CAAC,MAAM;MACd,MAAMiC,IAAG,GAAI/B,WAAW,CAACO,WAAW;MACpCQ,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEe,IAAI;MACxBA,IAAI,CAACC,OAAO,CAACC,OAAM,IAAK;QACtB,IAAIA,OAAO,CAACC,SAAQ,KAAM,KAAK,EAC7B3B,WAAW,CAACU,KAAK,CAACkB,IAAI,CAAC;UAAC,GAAGF;QAAO,CAAC;MACvC,CAAC;IACH,CAAC;IACD,MAAMG,gBAAe,GAAKC,KAAK,IAAK;MAClC5B,IAAI,CAACQ,KAAK,CAACqB,IAAI,CAACD,KAAK,CAACE,aAAa,CAAC;IACtC,CAAC;IACD,OAAO;MACLhC,WAAW;MAAEC,eAAe;MAAEC,IAAI;MAAEC,SAAS;MAC7C0B;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}