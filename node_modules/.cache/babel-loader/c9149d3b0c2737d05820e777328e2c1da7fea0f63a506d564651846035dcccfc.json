{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"h-full mt-3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_FullCalendar = _resolveComponent(\"FullCalendar\");\n  const _component_PvContextMenu = _resolveComponent(\"PvContextMenu\");\n  const _component_EditBookingDialog = _resolveComponent(\"EditBookingDialog\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_FullCalendar, {\n    ref: \"calendarRef\",\n    options: $setup.calendarOptions,\n    onContextmenu: $setup.onCalendarRightClick\n  }, null, 8 /* PROPS */, [\"options\", \"onContextmenu\"])]), _createVNode(_component_PvContextMenu, {\n    ref: \"menu\",\n    model: $setup.menuModel\n  }, null, 8 /* PROPS */, [\"model\"]), $setup.dialog ? (_openBlock(), _createBlock(_component_EditBookingDialog, {\n    key: 0,\n    closeDialog: $setup.closeDialog\n  }, null, 8 /* PROPS */, [\"closeDialog\"])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_1","_createVNode","_component_FullCalendar","ref","options","$setup","calendarOptions","onContextmenu","onCalendarRightClick","_component_PvContextMenu","model","menuModel","dialog","_createBlock","_component_EditBookingDialog","closeDialog"],"sources":["C:\\Users\\tkara.KARAHAN\\OneDrive\\Masaüstü\\Yeni klasör\\meetual.ui\\src\\components\\BookingHub\\views\\BookingHubList.vue"],"sourcesContent":["<template>\r\n  <div class=\"h-full mt-3 \">\r\n    <FullCalendar ref=\"calendarRef\" :options=\"calendarOptions\"   @contextmenu=\"onCalendarRightClick\"/>\r\n\r\n  </div>\r\n  <PvContextMenu ref=\"menu\" :model=\"menuModel\" />\r\n  <EditBookingDialog v-if=\"dialog\" :closeDialog=\"closeDialog\"/>\r\n</template>\r\n\r\n<script>\r\nimport {onMounted, ref} from \"vue\";\r\n\r\nimport FullCalendar from '@fullcalendar/vue3';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport trLocale from '@fullcalendar/core/locales/tr';\r\n\r\nimport EditBookingDialog from \"@/components/BookingHub/components/editBookingDialog.vue\";\r\n\r\nimport bookingData from \"@/auxiliary/userBookingInfos.json\";\r\n\r\n\r\nexport default {\r\n  name: 'BookingHubList',\r\n  components: {FullCalendar, EditBookingDialog},\r\n  setup() {\r\n    const consultationParticipantList = ref([]);\r\n    const selectedUser = ref()\r\n    const dialog = ref(false)\r\n    const menu = ref()\r\n    const calendarOptions = ref({\r\n      plugins: [dayGridPlugin],\r\n      initialView: 'dayGridMonth',\r\n      locale: trLocale,\r\n      headerToolbar: {\r\n        left: 'prev,next today',\r\n        center: 'title',\r\n        right: 'myCustomButton'\r\n      },\r\n      customButtons: {\r\n        myCustomButton: {\r\n          text: 'Yeni Randevu Oluştur', // Buton metni\r\n          click() {\r\n            openDialog()\r\n          }\r\n        }\r\n      },\r\n      events: [],\r\n    })\r\n    const calendarRef = ref(null);\r\n    const prepareTheData = () => {\r\n      const data = bookingData.bookingList;\r\n      const status = sessionStorage.getItem('user.Status');\r\n      const userName = sessionStorage.getItem('user.UserName');\r\n      console.log(status)\r\n      if (status == 2) {\r\n        data.forEach(booking => {\r\n          if (booking.AdvisorName == userName)\r\n            calendarOptions.value.events.push(booking)\r\n        })\r\n      } else if (status == 3) {\r\n        data.forEach(booking => {\r\n          if (booking.ClientName == userName)\r\n            calendarOptions.value.events.push(booking)\r\n        })\r\n      }\r\n      calendarOptions.value.events.forEach(event => {\r\n        const start = new Date(event.start);\r\n        const end = new Date(event.end);\r\n        const name =status == 2 ? event.ClientName : event.AdvisorName\r\n\r\n        event.title =name + \"-> \" + start.toLocaleTimeString('tr-TR', {\r\n          hour: '2-digit',\r\n          minute: '2-digit'\r\n        }) + \"-\" + end.toLocaleTimeString('tr-TR', {\r\n          hour: '2-digit',\r\n          minute: '2-digit'\r\n        })\r\n      })\r\n      calendarRef.value.getApi().refetchEvents();\r\n    }\r\n\r\n    const menuModel = ref([\r\n      {\r\n        label: \"Randevu Oluştur\",\r\n        icon: \"pi pi-plus\",\r\n        command: () => {\r\n          openDialog()\r\n        }\r\n      },\r\n    ])\r\n\r\n    const openDialog = () => {\r\n      dialog.value = true;\r\n    }\r\n\r\n    const closeDialog = () => {\r\n      dialog.value = false;\r\n    }\r\n\r\n    const onCalendarRightClick = (event) => {\r\n      menu.value.show(event.originalEvent);\r\n    };\r\n\r\n    onMounted(async () => {\r\n      await prepareTheData()\r\n    })\r\n    return {\r\n      consultationParticipantList, selectedUser, dialog, menuModel, menu, calendarOptions, calendarRef,\r\n      openDialog, closeDialog, onCalendarRightClick\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":";;EACOA,KAAK,EAAC;AAAc;;;;;6DAAzBC,mBAAA,CAGM,OAHNC,UAGM,GAFJC,YAAA,CAAkGC,uBAAA;IAApFC,GAAG,EAAC,aAAa;IAAEC,OAAO,EAAEC,MAAA,CAAAC,eAAe;IAAKC,aAAW,EAAEF,MAAA,CAAAG;2DAG7EP,YAAA,CAA+CQ,wBAAA;IAAhCN,GAAG,EAAC,MAAM;IAAEO,KAAK,EAAEL,MAAA,CAAAM;sCACTN,MAAA,CAAAO,MAAM,I,cAA/BC,YAAA,CAA6DC,4BAAA;;IAA3BC,WAAW,EAAEV,MAAA,CAAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}